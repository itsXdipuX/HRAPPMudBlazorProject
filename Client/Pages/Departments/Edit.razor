@page "/department/edit/{Id}"
@using HRAppMudBlazorProject.Shared

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<MudContainer MaxWidth="MaxWidth.Small">
    <EditForm Model="@department" OnValidSubmit="Save">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" sm="12">
                <h2>Edit Department</h2>
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Department Name" Variant="Variant.Outlined" Class="mt-3"
                                      @bind-Value="department.DeptName" For="@(() => department.DeptName)" />
                    </MudCardContent>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Class="ml-4 mb-4">Update</MudButton>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Class="ml-4 mb-4" OnClick="Cancel">Cancel</MudButton>
                </MudCard>
            </MudItem>

        </MudGrid>
    </EditForm>
</MudContainer>

@code {
    [Parameter]
    public string Id { get; set; }
    Department department = new Department();

    protected override async Task OnInitializedAsync()
    {
        department = await Http.GetFromJsonAsync<Department>("api/departments/" + Id);
    }

    protected async Task Save()
    {
        var response = await Http.PutAsJsonAsync("api/departments/" + Id, @department);

        await JsRuntime.InvokeVoidAsync("alert", "Updated Successfully!");
        NavigationManager.NavigateTo("department");

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("department");
    }
}